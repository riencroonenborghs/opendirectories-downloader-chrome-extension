{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-download-dialog/add-download-dialog.component.html","webpack:///./src/app/components/add-download-dialog/add-download-dialog.component.ts","webpack:///./src/app/components/download_details/download_details.component.html","webpack:///./src/app/components/download_details/download_details.component.ts","webpack:///./src/app/components/downloads/downloads.component.html","webpack:///./src/app/components/downloads/downloads.component.ts","webpack:///./src/app/components/icon/icon.component.html","webpack:///./src/app/components/icon/icon.component.ts","webpack:///./src/app/components/settings-dialog/settings-dialog.component.html","webpack:///./src/app/components/settings-dialog/settings-dialog.component.ts","webpack:///./src/app/components/sign-in-dialog/sign-in-dialog.component.html","webpack:///./src/app/components/sign-in-dialog/sign-in-dialog.component.ts","webpack:///./src/app/components/topbar/topbar.component.html","webpack:///./src/app/components/topbar/topbar.component.ts","webpack:///./src/app/interceptors/token-interceptor.ts","webpack:///./src/app/models/download.ts","webpack:///./src/app/models/server-settings.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/chrome-storage.service.ts","webpack:///./src/app/services/comm.service.ts","webpack:///./src/app/services/downloads.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<topbar></topbar>\n<downloads *ngIf=\"commService.signedIn\"></downloads>\n\n<div *ngIf=\"commService.signedIn\" class=\"add-download\">\n  <button mat-mini-fab (click)=\"addDownload()\">\n    <mat-icon>add_to_queue</mat-icon>\n  </button>\n</div>","import { Component } from '@angular/core';\n\nimport { MatDialog } from '@angular/material';\nimport { SignInDialogComponent } from './components/sign-in-dialog/sign-in-dialog.component';\nimport { AddDownloadDialogComponent } from './components/add-download-dialog/add-download-dialog.component';\n\nimport { ChromeStorageService } from './services/chrome-storage.service';\nimport { CommService } from './services/comm.service';\n// for the chrome background script\nimport { DownloadsService } from './services/downloads.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'opendirectories-downloader';\n\n  constructor(\n    public commService: CommService,\n    private dialog: MatDialog,\n    private chromeStorageService: ChromeStorageService,\n    // for the chrome background script\n    private downloadsService: DownloadsService\n  ) {\n    this.validateToken();\n\n    commService.signInEvents$.subscribe((signIn) => {\n      this.validateToken();\n    });\n  }\n\n  private validateToken() {\n    this.chromeStorageService.get().then(\n      (serverSettings) => {\n        this.commService.serverSettings = serverSettings;\n        if(this.commService.serverSettings.authorizationToken == null) {\n          setTimeout(() => this.showLogin(), 500)\n        } else {\n          this.commService.signedIn = true;\n          this.commService.reload();  \n        }\n      },\n      (error) => setTimeout(() => this.showLogin(), 500)\n    );\n  }\n\n  private showLogin() {\n    this.dialog.open(SignInDialogComponent);    \n  }\n\n  addDownload() {\n    let dialogRef = this.dialog.open(AddDownloadDialogComponent);\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from '@angular/forms';\n\n// authentication\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { TokenInterceptorProviders } from \"./interceptors/token-interceptor\";\n\n// material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule, MatProgressBarModule, MatExpansionModule, MatButtonModule, MatToolbarModule, MatIconModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatProgressSpinnerModule, MatSnackBarModule, MatBadgeModule, MatSelectModule, MatSlideToggleModule, MatGridListModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n//\nimport { AppComponent } from \"./app.component\";\nimport { DownloadsComponent } from './components/downloads/downloads.component';\nimport { DownloadDetailsComponent } from './components/download_details/download_details.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\nimport { SignInDialogComponent } from './components/sign-in-dialog/sign-in-dialog.component';\nimport { SettingsDialogComponent } from './components/settings-dialog/settings-dialog.component';\nimport { AddDownloadDialogComponent } from './components/add-download-dialog/add-download-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DownloadsComponent,\n    DownloadDetailsComponent,\n    IconComponent,\n    TopbarComponent,\n    SignInDialogComponent,\n    SettingsDialogComponent,\n    AddDownloadDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    // material\n    BrowserAnimationsModule,\n    // NoopAnimationsModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    MatProgressBarModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatBadgeModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatGridListModule\n  ],\n  entryComponents: [\n    SignInDialogComponent,\n    SettingsDialogComponent,\n    AddDownloadDialogComponent\n  ],\n  providers: [TokenInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div mat-dialog-content>\n  <div fxLayout=\"column\">\n    <mat-form-field [floatLabel]=\"true\">\n      <input matInput placeholder=\"URL\" required name=\"url\" (keyup)=\"parseURL()\" [(ngModel)]=\"download.url\">\n    </mat-form-field>\n    \n    <div fxLayout=\"column\" *ngIf=\"youtubeURL\">\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <mat-slide-toggle [(ngModel)]=\"download.audio_only\">\n          Audio Only\n        </mat-slide-toggle>\n        <mat-form-field *ngIf=\"download.audio_only\">\n          <mat-label>Audio Format</mat-label>\n          <mat-select [(value)]=\"download.audio_format\">\n            <mat-option *ngFor=\"let audioFormat of audioFormats\" [value]=\"audioFormat\">\n              {{audioFormat}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <mat-slide-toggle [(ngModel)]=\"download.download_subs\">\n          Download Subtitles\n        </mat-slide-toggle>\n        <mat-slide-toggle *ngIf=\"download.download_subs\" [(ngModel)]=\"download.srt_subs\">\n          Convert Subtitles to SRT\n        </mat-slide-toggle>\n      </div>\n    </div>\n\n    <div fxLayout=\"row\">\n      <mat-form-field [floatLabel]=\"true\">\n        <input matInput placeholder=\"File Filter\" name=\"file_filter\" [(ngModel)]=\"download.file_filter\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>File Filter Preset</mat-label>\n        <mat-select [(value)]=\"download.file_filter\">\n          <mat-option *ngFor=\"let preset of presets\" [value]=\"preset.value\">\n            {{preset.label}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\">\n      <mat-form-field [floatLabel]=\"true\">\n        <input matInput placeholder=\"HTTP Username\" name=\"http_username\" [(ngModel)]=\"download.http_username\">\n      </mat-form-field>\n      <mat-form-field [floatLabel]=\"true\">\n        <input matInput placeholder=\"HTTP Password\" name=\"http_password\" [(ngModel)]=\"download.http_password\">\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div *ngIf=\"error != ''\" class=\"error\">\n    {{error}}\n  </div>\n</div>\n<div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end end\">\n  <button mat-flat-button (click)=\"cancel()\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"save()\">Save</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\nimport { DownloadsService } from \"../../services/downloads.service\";\nimport { CommService } from \"../../services/comm.service\";\n\nimport { Download } from \"../../models/download\";\n\n@Component({\n  selector: 'app-add-download-dialog',\n  templateUrl: './add-download-dialog.component.html',\n  styleUrls: ['./add-download-dialog.component.sass']\n})\nexport class AddDownloadDialogComponent implements OnInit {\n\n  error: string = \"\";\n  download: Download = new Download();\n  presets = [\n    {value: \"*720*\", label: \"720\"},\n    {value: \"*1080*\", label: \"1080\"},\n    {value: \"*S01*\", label: \"Season 1\"},\n    {value: \"*S02*\", label: \"Season 2\"},\n    {value: \"*S03*\", label: \"Season 3\"},\n    {value: \"*S04*\", label: \"Season 4\"},\n    {value: \"*S05*\", label: \"Season 5\"},\n    {value: \"*S06*\", label: \"Season 6\"},\n    {value: \"*S07*\", label: \"Season 7\"},\n    {value: \"*S08*\", label: \"Season 8\"},\n    {value: \"*S09*\", label: \"Season 9\"},\n    {value: \"*S10*\", label: \"Season 10\"},\n  ];\n  audioFormats = [\"best\", \"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", \"wav\"];\n  youtubeURL: boolean = false;\n\n  constructor(\n    private dialogRef: MatDialogRef<AddDownloadDialogComponent>,\n    private downloadsService: DownloadsService,\n    private commService: CommService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  save() {\n    this.downloadsService.create(this.download).subscribe((result) => {\n      this.commService.showMessage(\"Download added.\");\n      this.dialogRef.close(false);\n      this.commService.reload();\n    });\n  }\n\n  parseURL() {\n    this.youtubeURL = this.download.url.match(/youtu/) != null;\n  }\n}\n","<mat-expansion-panel class=\"download\">\n  <mat-expansion-panel-header>\n    <mat-panel-title class=\"url\">\n      <icon [icon]=\"'link'\"></icon>\n      <span class=\"full-url\">{{download.url}}</span>\n    </mat-panel-title>\n  </mat-expansion-panel-header>\n  <div>\n    Added by {{download.user.email}}\n    <div *ngIf=\"download.status == 'started'\">\n      Started on {{download.started_at | date: 'medium'}}\n    </div>\n    <div *ngIf=\"download.status == 'finished' || download.status == 'error'\">\n      Started on {{download.started_at | date: 'medium'}}<br />\n      Finished on {{download.finished_at | date: 'medium'}}\n    </div>\n    <div *ngIf=\"download.status == 'error'\" class=\"error\">\n      {{download.error}}\n    </div>\n  </div>\n  <mat-action-row>\n    <div *ngIf=\"download.status == 'queued'\" class=\"buttons\" fxLayout=\"row\">\n      <button *ngIf=\"!cancelling\" mat-button color=\"warn\" (click)=\"cancel(download)\">\n        <mat-icon>cancel</mat-icon>\n      </button>\n      <mat-progress-spinner mode=\"indeterminate\" diameter=24 *ngIf=\"cancelling\"></mat-progress-spinner>\n    </div>\n\n    <div *ngIf=\"download.status == 'finished' || download.status == 'error'  || download.status == 'cancelled'\" class=\"buttons\" fxLayout=\"row\">\n      <button *ngIf=\"!removing\" mat-button color=\"warn\" (click)=\"remove(download)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n      <mat-progress-spinner mode=\"indeterminate\" diameter=24 *ngIf=\"removing\"></mat-progress-spinner>\n      <button *ngIf=\"!queueing\" mat-button color=\"primary\" (click)=\"queue(download)\">\n        <mat-icon>add_to_queue</mat-icon>\n      </button>\n      <mat-progress-spinner mode=\"indeterminate\" diameter=24 *ngIf=\"queueing\"></mat-progress-spinner>\n    </div>\n  </mat-action-row>\n</mat-expansion-panel>","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Download } from \"../../models/download\";\nimport { DownloadsService } from \"../../services/downloads.service\";\nimport { CommService } from \"../../services/comm.service\";\n\n@Component({\n  selector: \"download-details\",\n  templateUrl: \"./download_details.component.html\",\n  styleUrls: [\"./download_details.component.sass\"]\n})\nexport class DownloadDetailsComponent implements OnInit {\n\n  @Input() download: Download;\n\n  removing: boolean = false;\n  queueing: boolean = false;\n  cancelling: boolean = false;\n\n  constructor(\n    private downloadsService: DownloadsService,\n    private commService: CommService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  remove(download: Download) {\n    this.removing = true;\n    this.downloadsService.delete(download).subscribe();\n    this.commService.showMessage(\"Download removed.\");\n    this.commService.reload();\n  }\n\n  queue(download: Download) {\n    this.queueing = true;\n    this.downloadsService.queue(download).subscribe();\n    this.commService.showMessage(\"Download queued.\");\n    this.commService.reload();\n  }\n\n  cancel(download: Download) {\n    this.cancelling = true;\n    this.downloadsService.cancel(download).subscribe();\n    this.commService.showMessage(\"Download cancelled.\");\n    this.commService.reload();\n  }\n}\n","<mat-progress-bar mode=\"query\" *ngIf=\"busy\"></mat-progress-bar>\n<mat-tab-group>  \n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon>list_alt</mat-icon>\n      <span matBadgeColor=\"accent\" matBadge=\"{{queuedDownloads.length}}\" matBadgeOverlap=\"false\">Queued</span>\n    </ng-template>\n    <download-details *ngFor=\"let download of queuedDownloads\" [download]=\"download\"></download-details>      \n  </mat-tab>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon>get_appw</mat-icon>\n      <span matBadgeColor=\"accent\" matBadge=\"{{startedDownloads.length}}\" matBadgeOverlap=\"false\">Started</span>\n    </ng-template>\n    <download-details *ngFor=\"let download of startedDownloads\" [download]=\"download\"></download-details>      \n  </mat-tab>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon>check</mat-icon>\n      <span matBadgeColor=\"accent\" matBadge=\"{{finishedDownloads.length}}\" matBadgeOverlap=\"false\">Finished</span>\n    </ng-template>\n    <download-details *ngFor=\"let download of finishedDownloads\" [download]=\"download\"></download-details>      \n  </mat-tab>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon>error_outline </mat-icon>\n      <span matBadgeColor=\"accent\" matBadge=\"{{failedDownloads.length}}\" matBadgeOverlap=\"false\">Failed</span>\n    </ng-template>\n    <download-details *ngFor=\"let download of failedDownloads\" [download]=\"download\"></download-details>      \n  </mat-tab>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon>cancel</mat-icon>\n      <span matBadgeColor=\"accent\" matBadge=\"{{cancelledDownloads.length}}\" matBadgeOverlap=\"false\">Cancelled</span>\n    </ng-template>\n    <download-details *ngFor=\"let download of cancelledDownloads\" [download]=\"download\"></download-details>      \n  </mat-tab>\n</mat-tab-group>","import { Component, OnInit } from \"@angular/core\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Download } from \"../../models/download\"\nimport { DownloadsService } from \"../../services/downloads.service\";\nimport { CommService } from \"../../services/comm.service\";\nimport { ChromeStorageService } from \"../../services/chrome-storage.service\";\n\n@Component({\n  selector: \"downloads\",\n  templateUrl: \"./downloads.component.html\",\n  styleUrls: [\"./downloads.component.sass\"]\n})\nexport class DownloadsComponent implements OnInit {\n\n  private downloads: Download[] = [];\n  queuedDownloads: Download[] = [];\n  startedDownloads: Download[] = [];\n  finishedDownloads: Download[] = [];\n  failedDownloads: Download[] = [];\n  cancelledDownloads: Download[] = [];\n  busy: boolean = true;\n\n  constructor(\n    private downloadsService: DownloadsService,\n    public commService: CommService,\n    private snackBar: MatSnackBar,\n    private chromeStorageService: ChromeStorageService\n  ) {\n    commService.reloadEvents$.subscribe((reload) => {\n      this.getDownloads();\n    });\n\n    commService.snackBarEvents$.subscribe((message) => {\n      this.showMessage(message);\n    });\n  }\n\n  ngOnInit() {    \n  }\n\n  getDownloads() {\n    this.busy = true;\n    this.resetDownloads();\n    this.downloadsService.get().subscribe(\n      (downloads: Download[]) => {\n        this.downloads = downloads;\n        this.filterAllDownloads();\n        this.busy = false;\n      },\n      error => {\n        if(error.status === 401) {\n          this.commService.signOut();\n          this.chromeStorageService.set(this.commService.serverSettings).then(\n            (res) => {\n              this.commService.signIn();\n            },\n            (error) => console.error(error)\n          );\n        }\n      }\n    );\n  }\n\n  private showMessage(message: string) {\n    this.snackBar.open(message, \"\", {duration: 2000});\n  }\n\n  private resetDownloads() {\n    this.downloads = [];\n    this.queuedDownloads = [];\n    this.startedDownloads = [];\n    this.finishedDownloads = [];\n    this.failedDownloads = [];\n    this.cancelledDownloads = [];\n  }\n\n  private filterAllDownloads() {\n    this.queuedDownloads = this.filterDownloads(\"queued\");\n    this.startedDownloads = this.filterDownloads(\"started\");\n    this.finishedDownloads = this.filterDownloads(\"finished\");\n    this.failedDownloads = this.filterDownloads(\"error\");\n    this.cancelledDownloads = this.filterDownloads(\"cancelled\");\n  }\n  private filterDownloads(status: string) {\n    return this.downloads.filter((download, index, array) => { return download.status == status; }); \n  }\n}\n","<i class=\"material-icons\">{{icon}}</i>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.sass']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div mat-dialog-content>\n  <div fxLayout=\"column\">\n    <mat-form-field [floatLabel]=\"true\">\n      <input matInput placeholder=\"Server\" required name=\"server\" [(ngModel)]=\"server\">\n    </mat-form-field>\n    <mat-form-field [floatLabel]=\"true\">\n      <input matInput placeholder=\"Port\" type=\"number\" required name=\"port\" [(ngModel)]=\"port\">\n    </mat-form-field>\n  </div>\n  <div *ngIf=\"error != ''\" class=\"error\">\n    {{error}}\n  </div>\n</div>\n<div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end end\">\n  <button mat-flat-button (click)=\"cancel()\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"save()\">Save</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { ChromeStorageService } from '../../services/chrome-storage.service';\nimport { ServerSettings } from \"../../models/server-settings\";\n\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.sass']\n})\nexport class SettingsDialogComponent implements OnInit {\n  server: string;\n  port: number;\n  private authorizationToken: string;\n  error: string = \"\";\n\n  constructor(\n    private dialogRef: MatDialogRef<SettingsDialogComponent>,\n    private chromeStorageService: ChromeStorageService\n  ) { }\n\n  ngOnInit() {\n    this.chromeStorageService.get().then(\n      (res) => {\n        this.server             = res.server;\n        this.port               = res.port;\n        this.authorizationToken = res.authorizationToken;\n      },\n      (error) => console.error(error)\n    );\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  save() {\n    let serverSettings: ServerSettings = new ServerSettings(this.server, this.port, this.authorizationToken);\n    this.chromeStorageService.set(serverSettings).then(\n      (res) => {\n        this.dialogRef.close(true);\n      },\n      (error) => console.error(error)\n    );    \n  }\n}\n","<div mat-dialog-content>\n  <div fxLayout=\"column\">\n    <mat-form-field [floatLabel]=\"true\">\n      <input matInput placeholder=\"Email\" required name=\"email\" [(ngModel)]=\"email\" (keydown)=\"onEnter($event)\">\n    </mat-form-field>\n    <mat-form-field [floatLabel]=\"true\">\n      <input matInput placeholder=\"Password\" type=\"password\" required name=\"password\" [(ngModel)]=\"password\" (keydown)=\"onEnter($event)\">\n    </mat-form-field>\n  </div>\n  <div *ngIf=\"error != ''\" class=\"error\">\n    {{error}}\n  </div>\n</div>\n<div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end end\">\n  <button mat-raised-button color=\"primary\" (click)=\"logIn()\">Sign in</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { AuthService } from \"../../services/auth.service\";\nimport { CommService } from \"../../services/comm.service\";\n\n@Component({\n  selector: 'app-sign-in-dialog',\n  templateUrl: './sign-in-dialog.component.html',\n  styleUrls: ['./sign-in-dialog.component.sass']\n})\nexport class SignInDialogComponent implements OnInit {\n\n  email: string;\n  password: string;\n  error: string = \"\";\n\n  constructor(\n    private dialogRef: MatDialogRef<SignInDialogComponent>,\n    public commService: CommService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logIn(): void {\n    this.authService.signIn(this.email, this.password).subscribe(\n      res => {\n        if(res) {\n          this.dialogRef.close();\n          this.commService.signedIn = true;\n          this.commService.reload();\n        } else {\n          this.error = \"Invalid authorization\";\n        }\n      },\n      error => {\n        console.error(error);\n        this.error = error.error.errors.join(\", \");\n      }\n    );\n  }\n\n  onEnter(event) {\n    if(event.keyCode == 13) {\n      this.logIn();\n    }\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row *ngIf=\"!commService.signedIn\">\n    <button mat-icon-button (click)=\"settings()\">\n      <mat-icon>settings</mat-icon>\n    </button>\n    <span>Downloader</span>\n    <span class=\"spacer\"></span>\n    <button mat-icon-button (click)=\"signIn()\">\n      <mat-icon>lock_open</mat-icon>\n    </button>\n  </mat-toolbar-row>\n  \n  <mat-toolbar-row *ngIf=\"commService.signedIn\">\n    <button mat-icon-button (click)=\"settings()\">\n      <mat-icon>settings</mat-icon>\n    </button>\n    <span>Downloader</span>\n    <span class=\"spacer\"></span>\n    <mat-progress-spinner color=\"accent\" mode=\"indeterminate\" diameter=24 *ngIf=\"clearing\"></mat-progress-spinner>\n    <button mat-icon-button (click)=\"clear()\" *ngIf=\"!clearing\">\n      <mat-icon>delete_sweep</mat-icon>\n    </button>    \n    <mat-progress-spinner color=\"accent\" mode=\"indeterminate\" diameter=24 *ngIf=\"reloading\"></mat-progress-spinner>\n    <button mat-icon-button (click)=\"reload()\" *ngIf=\"!reloading\">\n      <mat-icon>autorenew</mat-icon>\n    </button>\n    <!-- <button mat-icon-button (click)=\"addDownload()\">\n      <mat-icon>add_to_queue</mat-icon>\n    </button> -->\n    <button mat-icon-button (click)=\"signOut()\">\n      <mat-icon>lock</mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { CommService } from \"../../services/comm.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { DownloadsService } from \"../../services/downloads.service\";\nimport { SettingsDialogComponent } from '../settings-dialog/settings-dialog.component';\n// import { AddDownloadDialogComponent } from '../add-download-dialog/add-download-dialog.component';\n\n@Component({\n  selector: 'topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.sass']\n})\nexport class TopbarComponent implements OnInit {\n  \n  clearing: boolean = false;\n  reloading: boolean = false;\n\n  constructor(\n    public commService: CommService,\n    private downloadsService: DownloadsService,\n    private authService: AuthService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n  }\n\n  settings() {\n    this.dialog.open(SettingsDialogComponent);    \n  }\n\n  reload() {\n    this.reloading = true;\n    this.commService.reload();\n    this.reloading = false;\n  }\n\n  clear() {\n    this.clearing = true;\n    this.downloadsService.clear().subscribe();\n    this.commService.showMessage(\"Downloads cleared.\");\n    this.commService.reload();\n    this.clearing = false;\n  }\n\n  // addDownload() {\n  //   let dialogRef = this.dialog.open(AddDownloadDialogComponent);\n  // }\n\n  signOut() {\n    this.authService.signOut().subscribe(\n      (result) => this.commService.showMessage(\"Signed out.\"),\n      (error) => console.error(error)\n    );\n  }\n\n  signIn() {\n    this.commService.signIn(); \n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { CommService } from \"../services/comm.service\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(\n    private commService: CommService\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if(this.commService.serverSettings && this.commService.serverSettings.authorizationToken) {\n      return next.handle(\n        req.clone({\n          headers: req.headers.append(\"Authorization\", this.commService.serverSettings.authorizationToken)\n        })\n      );\n    }\n    return next.handle(req);\n  }\n}\n\nexport const TokenInterceptorProviders  = [\n  { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n];\n","export class Download {\n  // internals\n  id:number;\n  job_id:string;\n  weight:number;\n  // basics\n  url:string;\n  user: {id: 1, email: \"rien@croonenborghs.net\"}\n  // status\n  status:string;\n  error:string;\n  // settings\n  audio_format:string;\n  audio_only:boolean;\n  download_subs:boolean;\n  srt_subs:boolean;\n  file_filter:string;\n  http_username:string;\n  http_password:string;\n  // date+times\n  created_at:string;\n  updated_at:string;\n  queued_at:string;\n  started_at:string;\n  finished_at:string;\n  cancelled_at:string;\n\n  toJSON() {\n    this.parseUrl();\n    return JSON.stringify({\n      \"url\": this.url,\n      \"audio_format\": this.audio_format,\n      \"audio_only\": this.audio_only,\n      \"download_subs\": this.download_subs,\n      \"srt_subs\": this.srt_subs,\n      \"file_filter\": this.file_filter,\n      \"http_username\": this.http_username,\n      \"http_password\": this.http_password\n    });\n  }\n\n  private parseUrl() {\n    if(this.url.match(/\\:\\/\\/released.tv\\/files\\/(.*)/) != null) {\n      this.http_username = \"released\";\n      this.http_password = \"released\";\n    }\n  }\n}","export class ServerSettings {\n  server: string;\n  port: number;\n  authorizationToken: string;\n\n  constructor(server: string = \"http://localhost\", port: number = 3000, authorizationToken: string = null) {\n    this.server = server;\n    this.port = port;\n    this.authorizationToken = authorizationToken;\n  }\n\n  toJSON(): string {\n    return JSON.stringify({server: this.server, port: this.port, authorizationToken: this.authorizationToken});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\nimport { map } from \"rxjs/operators\"; \n\nimport { CommService } from './comm.service';\nimport { ChromeStorageService } from './chrome-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private commService: CommService,\n    private chromeStorageService: ChromeStorageService\n  ) { }  \n\n  signIn(email: string, password: string): Observable<boolean> {\n    let signInUrl = this.buildFullPath(\"/users/sign_in\");\n    let data = {user: {email: email, password: password}};\n    return new Observable((observer) => {\n      this.httpClient.post(signInUrl, data).subscribe(\n        (response) => {\n          this.commService.serverSettings.authorizationToken = response[\"token\"];\n          this.chromeStorageService.set(this.commService.serverSettings).then((result) => {\n            observer.next(true);\n          });\n        },\n        (error) => observer.next(false)\n      );\n    });\n  }\n\n  signOut(): Observable<boolean> {\n    return new Observable((observer) => {\n      this.commService.signOut();\n      this.chromeStorageService.set(this.commService.serverSettings).then((result) => {\n        observer.next(true);\n      });\n    });\n  }\n\n  private buildFullPath(path): string {\n    return `${this.commService.serverSettings.server}:${this.commService.serverSettings.port}${path}`;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ServerSettings } from \"../models/server-settings\"\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class ChromeStorageService {\n  private storeKey:string = \"serverSettings\";\n\n  constructor() { }\n\n  get(): Promise<ServerSettings> {\n    return new Promise((resolve, reject) => {\n      let storageData = localStorage.getItem(this.storeKey);\n      if(storageData != null) {\n        let data = JSON.parse(storageData);\n        resolve(new ServerSettings(data.server, data.port, data.authorizationToken));\n      } else {\n        resolve(new ServerSettings());\n      }\n    });\n  }\n\n  set(serverSettings): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      try {\n        localStorage.setItem(this.storeKey, serverSettings.toJSON());\n        resolve(true);\n      } catch(_) {\n        resolve(false);\n      }\n    });\n  }\n\n  clear(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      localStorage.removeItem(this.storeKey);\n      resolve(true);\n    });\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { ServerSettings } from \"../models/server-settings\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommService {\n  public reloadEvents$: EventEmitter<boolean>;\n  public signInEvents$: EventEmitter<boolean>;\n  public snackBarEvents$: EventEmitter<string>;\n  \n  public signedIn: boolean = false;\n  public serverSettings: ServerSettings;\n\n  constructor() {\n    this.reloadEvents$ = new EventEmitter();\n    this.signInEvents$ = new EventEmitter();\n    this.snackBarEvents$ = new EventEmitter();\n  }\n\n  reload(timeout: number = 500): void {\n    setTimeout(() => this.reloadEvents$.emit(true), timeout);\n  }\n\n  signIn(): void {\n    setTimeout(() => this.signInEvents$.emit(true), 500);    \n  }\n\n  signOut(): void {\n    this.serverSettings.authorizationToken = null;\n    this.signedIn = false;\n  }\n\n  showMessage(message: string) {\n    this.snackBarEvents$.emit(message);    \n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nimport { CommService } from './comm.service';\nimport { ChromeStorageService } from './chrome-storage.service';\nimport { Download } from \"../models/download\"\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DownloadsService {\n\n  constructor(\n    private httpClient: HttpClient,\n    private chromeStorageService: ChromeStorageService,\n    private commService: CommService\n  ) { }\n\n  get() {\n    const url = this.buildFullPath(\"/api/v1/downloads.json\");\n    return this.httpClient.get(url);\n  }\n\n  create(download: Download) {\n    const url = this.buildFullPath(\"/api/v1/downloads\");\n    return this.httpClient.post(url, {\"download\": download.toJSON()});\n  }\n\n  createFromBackgroundJS(url: string) {\n    this.chromeStorageService.get().then(\n      (serverSettings) => {\n        this.commService.serverSettings = serverSettings;\n        const createUrl = this.buildFullPath(\"/api/v1/downloads\");\n        let download: Download = new Download();\n        download.url = url;\n        this.httpClient.post(createUrl, {\"download\": download.toJSON()}).subscribe();\n      },\n      (error) => console.error(\"nope\")\n    );    \n  }\n\n  cancel(download: Download): any {\n    const url = this.buildFullPath(`/api/v1/downloads/${download.id}/cancel`);\n    return this.httpClient.put(url, {});\n  }\n\n  delete(download: Download): any {\n    const url = this.buildFullPath(`/api/v1/downloads/${download.id}`);\n    return this.httpClient.delete(url);\n  }\n\n  queue(download: Download): any {\n    const url = this.buildFullPath(`/api/v1/downloads/${download.id}/queue`);\n    return this.httpClient.put(url, {});\n  }\n\n  clear(): any {\n    const url = this.buildFullPath(`/api/v1/downloads/clear`);\n    return this.httpClient.post(url, {});\n  }\n\n  private buildFullPath(path): string {\n    return `${this.commService.serverSettings.server}:${this.commService.serverSettings.port}${path}`;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}